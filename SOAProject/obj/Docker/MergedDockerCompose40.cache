name: dockercompose18252364755113645090
services:
  apigateway:
    build:
      context: D:\Facultate\soanet\SOAProject
      dockerfile: ApiGateway/Dockerfile
    container_name: api-gateway
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: apigateway
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "8007"
      protocol: tcp
  bookdb:
    container_name: book-db
    environment:
      MYSQL_ROOT_PASSWORD: password@12345#
    image: mysql:8.0.29-oracle
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 3306
      published: "18003"
      protocol: tcp
  bookwebapi:
    build:
      context: D:\Facultate\soanet\SOAProject
      dockerfile: BookWebApi/Dockerfile
    container_name: book-api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DB_HOST: bookdb
      DB_NAME: book
      DB_ROOT_PASSWORD: password@12345#
    image: bookwebapi
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
  customerdb:
    container_name: customer-db
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: password@12345#
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 1433
      published: "18001"
      protocol: tcp
  customerwebapi:
    build:
      context: D:\Facultate\soanet\SOAProject
      dockerfile: CustomerWebApi/Dockerfile
    container_name: customer-api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DB_HOST: customerdb
      DB_NAME: soa
      DB_SA_PASSWORD: password@12345#
    image: customerwebapi
    networks:
      backend: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
networks:
  backend:
    name: dockercompose18252364755113645090_backend